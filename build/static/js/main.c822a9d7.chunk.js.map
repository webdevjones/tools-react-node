{"version":3,"sources":["component/customAPI.js","component/Header.js","component/Front.js","utils/createTemplate.js","component/Builder.js","component/sectionAPI.js","component/Textfix.js","component/App.js","index.js"],"names":["getCustom","url","a","axios","get","result","data","CustomNbForm","handleCustomAdd","useState","formData","setFormData","handleForm","e","preventDefault","encodedURI","encodeURIComponent","customAPI","alert","className","value","onChange","target","placeholder","type","onClick","Header","title","handleHeaderClick","handleSection","setEmailId","emailId","img","id","input","src","alt","currentTarget","SectionTile","endpoint","key","Front","htmlToElement","html","template","document","createElement","trim","innerHTML","content","firstChild","insertAfter","newNode","existingNode","parentNode","insertBefore","nextSibling","generateArticle","item","replace","link","author","pubDate","image","createTemplate","templates","items","snapshotImg","domparser","DOMParser","s","XMLSerializer","console","log","baseHTML","doc","parseFromString","IA","internalAd","adSpacer","impactBox","impact","getElementById","forEach","index","snap","snapshot","ac","featured","generatePreheader","getElementsByTagName","removeAttribute","fullTemplate","serializeToString","QueueSwitch","incontent","handleSwitch","Number","QueuedItems","map","href","rel","pubTime","IncontentItem","SortableElement","section","arrIndex","SortableList","SortableContainer","topItems","Builder","setTopItems","helperClass","axis","onSortEnd","oldIndex","newIndex","arrayMove","config","allowedContent","startupShowBorders","fullPage","height","editor","getData","str","el","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","copyToClipboard","getSection","load","fixMe","button","textarea","textareaText","length","lines","split","i","splice","newLines","join","TextFix","width","margin","padding","fontSize","fontWeight","App","loading","setLoading","setSection","setItems","setTemplates","handleLoad","event","useEffect","sectionAPI","res","bottomIter","bottomItems","values","topIter","bottomValues","topValues","elem","push","hasOwnProperty","concat","temp","filter","ReactDOM","render"],"mappings":"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","file":"static/js/main.c822a9d7.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:3001/api/custom' :'/api/custom'\n\n\nconst getCustom = async (url) => {\n    try {\n        let result = await axios.get(`${baseUrl}/${url}`)\n        return (result.data)\n    }\n    catch (err) {\n        return 0        \n    }\n}\n\nexport default { getCustom }","import React, { useState } from 'react'\nimport customAPI from './customAPI'\n\nconst CustomNbForm = ({ handleCustomAdd }) => {\n    const [formData, setFormData] = useState('')\n\n    const handleFormChange = e => {\n        setFormData(e.target.value)\n    }\n    const handleForm = async e => {\n        e.preventDefault()\n        let encodedURI = encodeURIComponent(formData)\n        let data = await customAPI.getCustom(encodedURI)\n        if (data) {\n            handleCustomAdd(data)\n        }\n        else {\n            alert(`\n            Something went wrong :(\\n\n            - The blog link doesnt exist\\n\n            - The blog isnt recent enough (past 150 blogs)\\n\n            - You copied the link wrong somehow?????????\\n\n            Link: ${formData}\n             `)\n        }\n    }\n    return (\n        <div className='urlForm'>\n            <form>\n                <div>\n                    <input\n                        value={formData}\n                        onChange={handleFormChange}\n                        placeholder='Enter URL'\n                    />\n                </div>\n                <div>\n                    <button type=\"submit\" onClick={handleForm}>Find Custom NB Item</button>\n                </div>\n            </form>\n        </div>\n    )\n\n}\n\n\nconst Header = ({ title, handleHeaderClick, handleSection, handleCustomAdd, setEmailId, emailId }) => {\n    if (!title) {\n        title = \"Email Builder 10000\"\n    }\n    if (title === 'textfix') {\n        title = 'Text Fix'\n    }\n    let img = null\n    switch (title) {\n        case 'culture':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/MRCCulture_EmailBanner2020.png'\n            break;\n        case 'nbdaily':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/NB_EmailBanner2020.png'\n            break;\n        case 'cnsnews':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/CNS_EmailBanner2020.png'\n            break;\n        case 'mrctv':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/MRCTV_EmailBanner2020.png'\n            break;\n        case 'latino':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/MRCLatino_EmailBanner2020.png'\n            break;\n        case 'fsa':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/FreeSpeechAmerica_Logo.png'\n            break;\n\n        default:\n            break;\n    }\n    return (\n        <div\n            className={title + \" container-fluid\"}\n            id=\"header\"\n\n        >\n            <div\n                className=\"navbar\"\n            >\n                <div className=\"title\">\n                    <button input=\"submit\" onClick={handleHeaderClick}>\n                        {\n                            img\n                                ? <img src={img} alt={title} />\n                                : < h1 >{title}</h1>\n                        }\n                    </button>\n                </div>\n                {title === 'nbdaily' ? <CustomNbForm handleCustomAdd={handleCustomAdd} /> : null}\n\n                {\n                    setEmailId\n                        ? <div id=\"emailIdForm\">\n                            <label>Pardot Email Id:</label>\n                            <input type=\"text\" value={emailId} onChange={e => setEmailId(e.currentTarget.value)} placeholder=\"Paste email id if possible\"></input>\n                        </div>\n                        : false\n                }\n\n                <button className='textfix' input=\"submit\" value=\"textfix\" onClick={handleSection} >\n                    Format Text Email\n                </button>\n\n            </div>\n        </div >\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst SectionTile = ({ title, endpoint, handleSection }) => {\n    let img\n    switch (endpoint) {\n        case 'culture':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/MRCCulture_EmailBanner2020.png'\n            break;\n        case 'nbdaily':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/NB_EmailBanner2020.png'\n            break;\n        case 'cnsnews':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/CNS-Daily_EmailBanner2020.png'\n            break;\n        case 'mrctv':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/MRCTV_EmailBanner2020.png'\n            break;\n        case 'latino':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/MRCLatino_EmailBanner2020.png'\n            break;\n        case 'fsa':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/FreeSpeechAmerica_Logo.png'\n            break;\n\n        default:\n            break;\n    }\n    return (\n        <div className=\"selectionTiles--item\">\n            <button\n                className=\"selectionTiles--item--button\"\n                id={endpoint}\n                key={endpoint}\n                value={endpoint}\n                onClick={handleSection}\n            >\n                <img\n                    src={img}\n                    alt={endpoint}\n                    className=\"img-fluid\"\n                />\n            </button>\n        </div>\n    )\n}\nconst Front = ({ handleSection }) => {\n    return (\n        <div className=\"container\">\n            <div className=\"selectionTiles\">\n                <SectionTile title=\"NB Daily\" endpoint=\"nbdaily\" handleSection={handleSection} />\n                <SectionTile title=\"CNSNews\" endpoint=\"cnsnews\" handleSection={handleSection} />\n                <SectionTile title=\"MRCTV\" endpoint=\"mrctv\" handleSection={handleSection} />\n                <SectionTile title=\"Culture\" endpoint=\"culture\" handleSection={handleSection} />\n                <SectionTile title=\"Latino\" endpoint=\"latino\" handleSection={handleSection} />\n                <SectionTile title=\"FSA\" endpoint=\"fsa\" handleSection={handleSection} />\n            </div>\n        </div>\n    )\n}\n\nexport default Front ","const htmlToElement = html => {\n    var template = document.createElement('template');\n    html = html.trim(); // Never return a text node of whitespace as the result\n    template.innerHTML = html;\n    return template.content.firstChild;\n}\n// const pad = (num, size) => ('0000000000000' + num).substr(-size)\n\nconst insertAfter = (newNode, existingNode) => {\n    existingNode.parentNode.insertBefore(newNode, existingNode.nextSibling);\n}\n\nconst generatePreheader = item => {\n    return '<tbody><tr><td><p  style=\"display:none;\">' + item.content + '</p></td></tr></tbody>'\n}\n\nconst generateArticle = (item, template) => {\n    return template.replace(/\\[\\[TITLE\\]\\]/g, item.title)\n        .replace(/\\[\\[LINK\\]\\]/g, item.link)\n        .replace(/\\[\\[AUTHOR\\]\\]/g, item.author)\n        .replace(/\\[\\[DATE\\]\\]/g, item.pubDate)\n        .replace(/\\[\\[IMAGE\\]\\]/g, item.image)\n        .replace(/\\[\\[SUMMARY\\]\\]/g, item.content)\n}\nconst createTemplate = (templates, items, snapshotImg, emailId) => {\n\n    let domparser = new DOMParser()\n    let s = new XMLSerializer();\n    console.log(templates.baseHTML)\n    let doc = domparser.parseFromString(templates.baseHTML, 'text/html')\n\n    //Lets add the internal Ad\n    let IA = htmlToElement(templates.internalAd)\n    let adSpacer = htmlToElement(templates.adSpacer)\n    let impactBox = htmlToElement(templates.impact)\n    console.log(doc)\n    console.log('impact', impactBox)\n    insertAfter(adSpacer, doc.getElementById('articles-container'))\n    insertAfter(IA, doc.getElementById('articles-container'))\n    insertAfter(adSpacer, doc.getElementById('articles-container'))\n    insertAfter(impactBox, doc.getElementById('impact-box'))\n\n    //onto the items\n    items.forEach((item, index) => {\n        if (!index) {\n            //Add the featured story\n            doc\n                .getElementById('featured-container')\n                .innerHTML = generateArticle(item, templates.featured)\n            //Add the preheader\n            doc\n                .getElementById('preheader')\n                .innerHTML = generatePreheader(item)\n        }\n        else {\n            //add the snapshots\n            let snap = snapshotImg\n                ? htmlToElement(generateArticle(item, templates.snapshotImg))\n                : htmlToElement(generateArticle(item, templates.snapshot))\n\n            let ac = doc.getElementById('articles-container')\n            ac.parentNode.insertBefore(snap, ac)\n            // insertAfter(snap, doc.getElementById('articles-container'))\n\n        }\n    })\n    doc.getElementsByTagName('html')[0].removeAttribute('style')\n\n    // const EmailID = Math.floor(Math.random() * 1000000000)\n    let fullTemplate = s.serializeToString(doc)\n    fullTemplate = fullTemplate\n        .replace(/%%emailId%%/g, emailId)\n    // .replace(/style=\"overflow-y: hidden;\"/, '')\n\n    return fullTemplate\n}\n\nexport default createTemplate","import React from 'react'\nimport CKEditor from 'ckeditor4-react'\nimport htmlToElement from '../utils/createTemplate'\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\n\nconst QueueSwitch = ({ incontent, index, handleSwitch }) => {\n    if (Number(incontent)) {\n        return (\n            <button\n                className=\"buildArea--topItems--incontent--button\"\n                input=\"submit\"\n                value={[index, Number(incontent)]}\n                onClick={handleSwitch}\n            >\n                Remove\n            </button>\n        )\n    }\n    else {\n        return (\n            <button\n                className=\"buildArea--items--queued--button\"\n                input=\"submit\"\n                value={[index, Number(incontent)]}\n                onClick={handleSwitch}\n            >\n                Add\n            </button>\n        )\n    }\n}\nconst QueuedItems = ({ items, handleSwitch }) => {\n    return (\n        items.map((item, index) => {\n            return (\n                <div key={index} className=\"buildArea--items--queued\">\n                    <h6>\n                        <a\n                            href={item.link}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            {item.title}\n                        </a>\n                    </h6>\n                    <p>{`${item.author} | ${item.pubDate} | ${item.pubTime}`}</p>\n                    <QueueSwitch incontent='0' index={index} handleSwitch={handleSwitch} />\n                </div>\n            )\n        })\n    )\n}\n\nconst IncontentItem = SortableElement(({ section, item, arrIndex, handleSwitch }) => {\n    return (\n        <div\n            key={arrIndex}\n            className={section + \"Light buildArea--topItems--incontent\"}\n        >\n            <h6>\n                <a\n                    href={item.link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    {item.title}\n                </a>\n            </h6>\n\n            <p>{`${item.author} | ${item.pubDate} | ${item.pubTime}`}</p>\n            <QueueSwitch incontent='1' index={arrIndex} handleSwitch={handleSwitch} />\n        </div>\n    )\n})\n\nconst SortableList = SortableContainer(({ topItems, handleSwitch, section }) => {\n    return (\n        <div className=\"buildArea--topItems\">\n            {\n                topItems.map((item, index) => {\n                    return (\n                        <IncontentItem section={section} item={item} key={index} index={index} arrIndex={index} handleSwitch={handleSwitch} />\n                    )\n                })\n            }\n        </div>\n    )\n})\n\nconst Builder = ({ items, topItems, setTopItems, templates, section, handleSwitch, emailId }) => {\n    const snapshotImg = section === 'nbdaily' || section === 'mrctv'\n        ? false\n        : true\n    let template = htmlToElement(templates, topItems, snapshotImg, emailId)\n\n    const onSortEnd = ({ oldIndex, newIndex }) => {\n        setTopItems(arrayMove(topItems, oldIndex, newIndex))\n    };\n    const copyToClipboard = str => {\n        const el = document.createElement('textarea');\n        el.value = str;\n        el.setAttribute('readonly', '');\n        el.style.position = 'absolute';\n        el.style.left = '-9999px';\n        document.body.appendChild(el);\n        el.select();\n        document.execCommand('copy');\n        document.body.removeChild(el);\n    };\n    const editorChange = e => {\n        let data = e.editor.getData()\n        data = data\n            .replace(/<!--\\[if \\(gte mso 9\\)\\|\\(IE\\)\\]>/g, \"\\n<!--[if (gte mso 9)|(IE)]>\\n\")\n            .replace(/<!\\[endif\\]-->/g, \"\\n<![endif]-->\\n\")\n        copyToClipboard(data)\n    }\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"buildArea\">\n                <div className=\"buildArea--items\">\n                    <QueuedItems items={items} handleSwitch={handleSwitch} />\n                </div>\n                <SortableList section={section} topItems={topItems} helperClass='test' axis='xy' handleSwitch={handleSwitch} onSortEnd={onSortEnd} />\n                <div className=\"buildArea--editor\">\n                    <CKEditor\n                        data={template}\n                        type=\"classic\"\n                        config={{\n                            allowedContent: true,\n                            startupShowBorders: false,\n                            fullPage: true,\n                            height: 600\n                            // extraPlugins: 'autogrow',\n                            // autoGrow_onStartup: true\n                        }}\n                        onChange={editorChange}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Builder","import axios from 'axios'\n\nconsole.log()\nconst baseUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:3001/api/section' :'/api/section'\n// const baseUrl = \n\nconst getSection = async (section, load) => {\n    let result = await axios.get(`${baseUrl}/${section}`)\n    return (result.data)\n}\n\nexport default { getSection }","import React from 'react'\nconst fixMe = () => {\n    let button = document.getElementsByTagName('button');\n    let textarea = document.getElementsByTagName('textarea');\n    let textareaText = textarea['formatMe'].value;\n    if (textareaText.length) {\n        let lines = textareaText.split('\\n');\n        for (let i = 0; i < lines.length; ++i) {\n            lines[i] = lines[i].replace(/\\[mrctv:[^\\]]*?\\]/sgi, '')\n                .replace(/.*?intermarkets.*/sgi, '')\n                .replace(/.*?%%email%%.*/sgi, '')\n                .replace(/^\\s*/, '');\n        }\n        for (let i = lines.length - 1; i > 1; --i) {\n            if (!(lines[i].length + lines[i - 1].length/* + lines[i-2].length*/)) {\n                lines.splice(i, 1);\n            }\n        }\n        let newLines = lines.join('\\n');\n\n        textarea['formatMe'].value = newLines;\n        textarea['formatMe'].select()\n        document.execCommand(\"copy\")\n        // window.getSelection().removeAllRanges()\n        button['textButton'].innerHTML = \"Formatted AND copied to clipboard for your convenience =D\";    \n\n\n    }\n}\nconst TextFix = () => {\n    return (\n        <div className=\"container\">\n            <button\n                id='textButton'\n                onClick={fixMe}\n                style={{ \n                    width: '100%', \n                    margin: '1rem 0',\n                    padding: '.5rem 0',\n                    fontSize: '1rem',\n                    fontWeight: '600'\n\n                }}\n            >Format this text please!</button>\n            <textarea\n                id='formatMe'\n                style={{ width: '100%', height: '75vh' }}\n            ></textarea>\n\n        </div>\n    )\n}\n\nexport default TextFix","import React, { useState, useEffect } from 'react'\nimport Header from './Header'\nimport Front from './Front'\nimport Builder from './Builder'\nimport sectionAPI from './sectionAPI'\nimport TextFix from './Textfix'\n\n\nconst App = () => {\n  const [loading, setLoading] = useState(false)\n  const [section, setSection] = useState(null)\n  const [items, setItems] = useState({})\n  const [topItems, setTopItems] = useState({})\n  const [templates, setTemplates] = useState({})\n  const [emailId, setEmailId] = useState(\"\")\n  const handleLoad = load => {\n    setLoading(load)\n  }\n\n  const handleCustomAdd = data => {\n    console.log(data)\n    setTopItems([data].concat(topItems))\n  }\n\n  const handleHeaderClick = () => {\n    setLoading(false)\n    setSection(null)\n    setTopItems({})\n    setTemplates({})\n    setItems({})\n  }\n\n  const handleSection = (event) => {\n    const section = event.currentTarget.value\n    setSection(section)\n  }\n\n  const handleSwitch = (event) => {\n    let [index, incontent] = event.currentTarget.value.split(',')\n    index = Number(index)\n    incontent = Number(incontent)\n    if (incontent) {\n      const temp = topItems[index]\n      setTopItems(topItems.filter((item, i) => i !== index))\n      setItems([temp].concat(items))\n    }\n    else {\n      const temp = items[index]\n      setItems(items.filter((item, i) => i !== index))\n      setTopItems(topItems.concat([temp]))\n\n    }\n  }\n\n  useEffect(() => {\n    if (section && section !== 'textfix') {\n      const getData = async () => {\n        handleLoad(true)\n        const res = await sectionAPI.getSection(section)\n        handleLoad(false)\n        const bottomIter = res.bottomItems.values()\n        const topIter = res.topItems.values()\n        const bottomValues = []\n        const topValues = []\n        for (let elem of bottomIter) {\n          bottomValues.push(elem)\n        }\n        for (let elem of topIter) {\n          topValues.push(elem)\n        }\n        setItems(bottomValues)\n        setTopItems(topValues)\n        setTemplates(res.templates)\n\n\n      }\n      getData()\n\n    }\n\n  }, [section])\n\n\n\n  if (loading) {\n    return (\n      <div className=\"loading-wrapper\">\n        <img\n          src=\"spinninHarry.gif\"\n          alt=\"Loading...\"\n        />\n      </div>\n    )\n  }\n\n  else if (section === 'textfix') {\n    return (\n      <div className=\"bootstrap-wrapper\">\n        <Header title={section} handleHeaderClick={handleHeaderClick} handleSection={handleSection} />\n        <TextFix />\n      </div>\n    )\n\n  }\n  else if (section && items.length >= 0 && topItems.length >= 0 && templates.hasOwnProperty('baseHTML')) {\n    return (\n      <div className=\"bootstrap-wrapper\">\n        <Header title={section} handleHeaderClick={handleHeaderClick} handleSection={handleSection} handleCustomAdd={handleCustomAdd} setEmailId={setEmailId} emailId={emailId}/>\n        <Builder items={items} topItems={topItems} setTopItems={setTopItems} templates={templates} section={section} handleSwitch={handleSwitch} emailId={emailId} />\n      </div>\n    )\n  }\n\n  else {\n    return (\n      <div className=\"bootstrap-wrapper\">\n        <Header handleHeaderClick={handleHeaderClick} handleSection={handleSection} />\n        <Front handleSection={handleSection} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react'\nimport App from './component/App'\nimport './style.min.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}