{"version":3,"sources":["component/customAPI.js","component/Header.js","component/Front.js","utils/createTemplate.js","component/Builder.js","component/sectionAPI.js","component/Textfix.js","component/App.js","index.js"],"names":["getCustom","url","a","axios","get","result","data","CustomNbForm","handleCustomAdd","useState","formData","setFormData","handleForm","e","preventDefault","encodedURI","encodeURIComponent","customAPI","alert","className","value","onChange","target","placeholder","type","onClick","Header","title","handleHeaderClick","handleSection","img","id","input","src","alt","SectionTile","endpoint","key","Front","htmlToElement","html","template","document","createElement","trim","innerHTML","content","firstChild","insertAfter","newNode","existingNode","parentNode","insertBefore","nextSibling","generateArticle","item","replace","link","author","pubDate","image","createTemplate","templates","items","snapshotImg","domparser","DOMParser","s","XMLSerializer","doc","parseFromString","baseHTML","IA","internalAd","adSpacer","getElementById","forEach","index","snap","snapshot","ac","featured","generatePreheader","EmailID","Math","floor","random","fullTemplate","serializeToString","substr","QueueSwitch","incontent","handleSwitch","Number","QueuedItems","map","href","rel","pubTime","IncontentItem","SortableElement","section","onDrag","console","log","SortableList","SortableContainer","topItems","Builder","setTopItems","helperClass","axis","onSortEnd","oldIndex","newIndex","arrayMove","config","allowedContent","startupShowBorders","fullPage","extraPlugins","autoGrow_onStartup","str","el","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","copyToClipboard","editor","getData","getSection","load","fixMe","button","getElementsByTagName","textarea","textareaText","length","lines","split","i","splice","newLines","join","TextFix","width","margin","padding","fontSize","fontWeight","height","App","loading","setLoading","setSection","setItems","setTemplates","handleLoad","event","currentTarget","useEffect","sectionAPI","res","bottomIter","bottomItems","values","topIter","bottomValues","topValues","elem","push","hasOwnProperty","concat","temp","filter","ReactDOM","render"],"mappings":"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","file":"static/js/main.ee6f5fe9.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/custom'\n// const baseUrl = 'http://localhost:3001/api/custom'\n\nconst getCustom = async (url) => {\n    try {\n        let result = await axios.get(`${baseUrl}/${url}`)\n        return (result.data)\n    }\n    catch (err) {\n        return 0        \n    }\n}\n\nexport default { getCustom }","import React, { useState } from 'react'\nimport customAPI from './customAPI'\n\nconst CustomNbForm = ({ handleCustomAdd }) => {\n    const [formData, setFormData] = useState('')\n\n    const handleFormChange = e => {\n        setFormData(e.target.value)\n    }\n    const handleForm = async e => {\n        e.preventDefault()\n        let encodedURI = encodeURIComponent(formData)\n        let data = await customAPI.getCustom(encodedURI)\n        if (data) {\n            handleCustomAdd(data)\n        }\n        else {\n            alert(`\n            Something went wrong :(\\n\n            - The blog link doesnt exist\\n\n            - The blog isnt recent enough (past 150 blogs)\\n\n            - You copied the link wrong somehow?????????\\n\n            Link: ${formData}\n             `)\n        }\n    }\n    return (\n        <div className='urlForm'>\n            <form>\n                <div>\n                    <input\n                        value={formData}\n                        onChange={handleFormChange}\n                        placeholder='Enter URL'\n                    />\n                </div>\n                <div>\n                    <button type=\"submit\" onClick={handleForm}>Find Custom NB Item</button>\n                </div>\n            </form>\n        </div>\n    )\n\n}\n\nconst Header = ({ title, handleHeaderClick, handleSection, handleCustomAdd }) => {\n    if (!title) {\n        title = \"Email Builder 10000\"\n    }\n    if (title === 'textfix') {\n        title = 'Text Fix'\n    }\n    let img = null\n    switch (title) {\n        case 'culture':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/MRCCulture_EmailBanner2020.png'\n            break;\n        case 'nbdaily':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/NB_EmailBanner2020.png'\n            break;\n        case 'cnsnews':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/CNS_EmailBanner2020.png'\n            break;\n        case 'mrctv':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/MRCTV_EmailBanner2020.png'\n            break;\n        case 'latino':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/MRCLatino_EmailBanner2020.png'\n            break;\n        case 'fsa':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/FreeSpeechAmerica_Logo.png'\n            break;\n\n        default:\n            break;\n    }\n    return (\n        <div\n            className={title + \" container-fluid\"}\n            id=\"header\"\n\n        >\n            <div\n                className=\"navbar\"\n            >\n                <div className=\"title\">\n                    <button input=\"submit\" onClick={handleHeaderClick}>\n                        {\n                            img\n                                ? <img src={img} alt={title} />\n                                : < h1 >{title}</h1>\n                        }\n                    </button>\n                </div>\n                {title === 'nbdaily' ? <CustomNbForm handleCustomAdd={handleCustomAdd} /> : null}\n                <button className='textfix' input=\"submit\" value=\"textfix\" onClick={handleSection} >\n                    Format Text Email\n                </button>\n\n            </div>\n        </div >\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst SectionTile = ({ title, endpoint, handleSection }) => {\n    let img\n    switch (endpoint) {\n        case 'culture':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/MRCCulture_EmailBanner2020.png'\n            break;\n        case 'nbdaily':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/NB_EmailBanner2020.png'\n            break;\n        case 'cnsnews':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/CNS_EmailBanner2020.png'\n            break;\n        case 'mrctv':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/MRCTV_EmailBanner2020.png'\n            break;\n        case 'latino':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/MRCLatino_EmailBanner2020.png'\n            break;\n        case 'fsa':\n            img = 'https://cdn.mrc.org/U/OP/EMT/LOGO/FreeSpeechAmerica_Logo.png'\n            break;\n\n        default:\n            break;\n    }\n    return (\n        <div className=\"selectionTiles--item\">\n            <button\n                className=\"selectionTiles--item--button\"\n                id={endpoint}\n                key={endpoint}\n                value={endpoint}\n                onClick={handleSection}\n            >\n                <img\n                    src={img}\n                    alt={endpoint}\n                    className=\"img-fluid\"\n                />\n            </button>\n        </div>\n    )\n}\nconst Front = ({ handleSection }) => {\n    return (\n        <div className=\"container\">\n            <div className=\"selectionTiles\">\n                <SectionTile title=\"NB Daily\" endpoint=\"nbdaily\" handleSection={handleSection} />\n                <SectionTile title=\"CNSNews\" endpoint=\"cnsnews\" handleSection={handleSection} />\n                <SectionTile title=\"MRCTV\" endpoint=\"mrctv\" handleSection={handleSection} />\n                <SectionTile title=\"Culture\" endpoint=\"culture\" handleSection={handleSection} />\n                <SectionTile title=\"Latino\" endpoint=\"latino\" handleSection={handleSection} />\n                <SectionTile title=\"FSA\" endpoint=\"fsa\" handleSection={handleSection} />\n            </div>\n        </div>\n    )\n}\n\nexport default Front ","const htmlToElement = html => {\n    var template = document.createElement('template');\n    html = html.trim(); // Never return a text node of whitespace as the result\n    template.innerHTML = html;\n    return template.content.firstChild;\n}\nconst pad = (num, size) => ('0000000000000' + num).substr(-size)\n\nconst insertAfter = (newNode, existingNode) => {\n    existingNode.parentNode.insertBefore(newNode, existingNode.nextSibling);\n}\n\nconst generatePreheader = item => {\n    return '<tbody><tr><td><p  style=\"display:none;\">' + item.content + '</p></td></tr></tbody>'\n}\n\nconst generateArticle = (item, template) => {\n    return template.replace(/\\[\\[TITLE\\]\\]/g, item.title)\n        .replace(/\\[\\[LINK\\]\\]/g, item.link)\n        .replace(/\\[\\[AUTHOR\\]\\]/g, item.author)\n        .replace(/\\[\\[DATE\\]\\]/g, item.pubDate)\n        .replace(/\\[\\[IMAGE\\]\\]/g, item.image)\n        .replace(/\\[\\[SUMMARY\\]\\]/g, item.content)\n}\nconst createTemplate = (templates, items, snapshotImg) => {\n\n    let domparser = new DOMParser()\n    let s = new XMLSerializer();\n    let doc = domparser.parseFromString(templates.baseHTML, 'text/html')\n\n    //Lets add the internal Ad\n    let IA = htmlToElement(templates.internalAd)\n    let adSpacer = htmlToElement(templates.adSpacer)\n    insertAfter(adSpacer, doc.getElementById('articles-container'))\n    insertAfter(IA, doc.getElementById('articles-container'))\n    insertAfter(adSpacer, doc.getElementById('articles-container'))\n\n    //onto the items\n    items.forEach((item, index) => {\n        if (!index) {\n            //Add the featured story\n            doc\n                .getElementById('featured-container')\n                .innerHTML = generateArticle(item, templates.featured)\n            //Add the preheader\n            doc\n                .getElementById('preheader')\n                .innerHTML = generatePreheader(item)\n        }\n        else {\n            //add the snapshots\n            let snap = snapshotImg\n                ? htmlToElement(generateArticle(item, templates.snapshotImg))\n                : htmlToElement(generateArticle(item, templates.snapshot))\n\n            let ac = doc.getElementById('articles-container')\n            ac.parentNode.insertBefore(snap, ac)\n            // insertAfter(snap, doc.getElementById('articles-container'))\n\n        }\n    })\n\n    const EmailID = Math.floor(Math.random() * 1000000000)\n    let fullTemplate = s.serializeToString(doc)\n    fullTemplate = fullTemplate.replace(/%%emailId%%/g, pad(EmailID, 10))\n\n    return fullTemplate\n}\n\nexport default createTemplate","import React from 'react'\nimport CKEditor from 'ckeditor4-react'\nimport htmlToElement from '../utils/createTemplate'\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\n\nconst QueueSwitch = ({ incontent, index, handleSwitch }) => {\n    if (Number(incontent)) {\n        return (\n            <button\n                className=\"buildArea--topItems--incontent--button\"\n                input=\"submit\"\n                value={[index, Number(incontent)]}\n                onClick={handleSwitch}\n            >\n                Remove\n            </button>\n        )\n    }\n    else {\n        return (\n            <button\n                className=\"buildArea--items--queued--button\"\n                input=\"submit\"\n                value={[index, Number(incontent)]}\n                onClick={handleSwitch}\n            >\n                Add\n            </button>\n        )\n    }\n}\nconst QueuedItems = ({ items, handleSwitch }) => {\n    return (\n        items.map((item, index) => {\n            return (\n                <div key={index} className=\"buildArea--items--queued\">\n                    <h6>\n                        <a\n                            href={item.link}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            {item.title}\n                        </a>\n                    </h6>\n                    <p>{`${item.author} | ${item.pubDate} | ${item.pubTime}`}</p>\n                    <QueueSwitch incontent='0' index={index} handleSwitch={handleSwitch} />\n                </div>\n            )\n        })\n    )\n}\n\nconst IncontentItem = SortableElement(({ section, item, index, handleSwitch }) => {\n    const onDrag = e => {\n        console.log('im getting drug')\n    }\n    return (\n        <div\n            key={index}\n            onDrag={onDrag}\n            className={section + \"Light buildArea--topItems--incontent\"}\n        >\n            <h6>\n                <a\n                    href={item.link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    {item.title}\n                </a>\n            </h6>\n\n            <p>{`${item.author} | ${item.pubDate} | ${item.pubTime}`}</p>\n            <QueueSwitch incontent='1' index={index} handleSwitch={handleSwitch} />\n        </div>\n    )\n})\n\nconst SortableList = SortableContainer(({ topItems, handleSwitch, section }) => {\n    return (\n        <div className=\"buildArea--topItems\">\n            {\n                topItems.map((item, index) => <IncontentItem section={section} item={item} key={index} index={index} handleSwitch={handleSwitch} />)\n            }\n        </div>\n    )\n})\n\nconst Builder = ({ items, topItems, setTopItems, templates, section, handleSwitch }) => {\n    const snapshotImg = section === 'nbdaily' || section === 'mrctv'\n        ? false\n        : true\n    let template = htmlToElement(templates, topItems, snapshotImg)\n\n    // console.log(template)\n    const onSortEnd = ({ oldIndex, newIndex }) => {\n        setTopItems(arrayMove(topItems, oldIndex, newIndex))\n        // setTopItems(({ topItems }) => ({\n        //     topItems: arrayMove(topItems, oldIndex, newIndex),\n        // }));\n    };\n    const copyToClipboard = str => {\n        const el = document.createElement('textarea');\n        el.value = str;\n        el.setAttribute('readonly', '');\n        el.style.position = 'absolute';\n        el.style.left = '-9999px';\n        document.body.appendChild(el);\n        el.select();\n        document.execCommand('copy');\n        document.body.removeChild(el);\n    };\n    const editorChange = e => {\n        copyToClipboard(e.editor.getData())\n    }\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"buildArea\">\n                <div className=\"buildArea--items\">\n                    <QueuedItems items={items} handleSwitch={handleSwitch} />\n                </div>\n                <SortableList section={section} topItems={topItems} helperClass='test' axis='xy' handleSwitch={handleSwitch} onSortEnd={onSortEnd} />\n                <div className=\"buildArea--editor\">\n                    <CKEditor\n                        data={template}\n                        type=\"classic\"\n                        config={{\n                            allowedContent: true,\n                            startupShowBorders: false,\n                            fullPage: true,\n                            extraPlugins: 'autogrow',\n                            autoGrow_onStartup: true\n                        }}\n                        onChange={editorChange}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Builder","import axios from 'axios'\n\nconst baseUrl = '/api/section'\n// const baseUrl = 'http://localhost:3001/api/section'\n\nconst getSection = async (section, load) => {\n    // load(true)\n    let result = await axios.get(`${baseUrl}/${section}`)\n    return (result.data)\n}\n\nexport default { getSection }","import React from 'react'\nconst fixMe = () => {\n    let button = document.getElementsByTagName('button');\n    let textarea = document.getElementsByTagName('textarea');\n    let textareaText = textarea['formatMe'].value;\n    if (textareaText.length) {\n        let lines = textareaText.split('\\n');\n        for (let i = 0; i < lines.length; ++i) {\n            lines[i] = lines[i].replace(/\\[mrctv:[^\\]]*?\\]/sgi, '')\n                .replace(/.*?intermarkets.*/sgi, '')\n                .replace(/^\\s*/, '');\n        }\n        for (let i = lines.length - 1; i > 1; --i) {\n            if (!(lines[i].length + lines[i - 1].length/* + lines[i-2].length*/)) {\n                lines.splice(i, 1);\n            }\n        }\n        let newLines = lines.join('\\n');\n\n        textarea['formatMe'].value = newLines;\n        textarea['formatMe'].select()\n        document.execCommand(\"copy\")\n        // window.getSelection().removeAllRanges()\n        button['textButton'].innerHTML = \"Formatted AND copied to clipboard for your convenience =D\";    \n\n\n    }\n}\nconst TextFix = () => {\n    return (\n        <div className=\"container\">\n            <button\n                id='textButton'\n                onClick={fixMe}\n                style={{ \n                    width: '100%', \n                    margin: '1rem 0',\n                    padding: '.5rem 0',\n                    fontSize: '1rem',\n                    fontWeight: '600'\n\n                }}\n            >Format this text please!</button>\n            <textarea\n                id='formatMe'\n                style={{ width: '100%', height: '75vh' }}\n            ></textarea>\n\n        </div>\n    )\n}\n\nexport default TextFix","import React, { useState, useEffect } from 'react'\nimport Header from './Header'\nimport Front from './Front'\nimport Builder from './Builder'\nimport sectionAPI from './sectionAPI'\nimport TextFix from './Textfix'\n\n\nconst App = () => {\n  const [loading, setLoading] = useState(false)\n  const [section, setSection] = useState(null)\n  const [items, setItems] = useState({})\n  const [topItems, setTopItems] = useState({})\n  const [templates, setTemplates] = useState({})\n\n  const handleLoad = load => {\n    setLoading(load)\n  }\n\n  const handleCustomAdd = data => {\n    console.log(data)\n    setTopItems([data].concat(topItems))\n  }\n\n  const handleHeaderClick = () => {\n    setLoading(false)\n    setSection(null)\n    setTopItems({})\n    setTemplates({})\n    setItems({})\n  }\n\n  const handleSection = (event) => {\n    const section = event.currentTarget.value\n    setSection(section)\n  }\n\n  const handleSwitch = (event) => {\n    let [index, incontent] = event.currentTarget.value.split(',')\n    index = Number(index)\n    incontent = Number(incontent)\n    if (incontent) {\n      const temp = topItems[index]\n      setTopItems(topItems.filter((item, i) => i !== index))\n      setItems([temp].concat(items))\n    }\n    else {\n      const temp = items[index]\n      setItems(items.filter((item, i) => i !== index))\n      setTopItems(topItems.concat([temp]))\n\n    }\n  }\n\n  useEffect(() => {\n    if (section && section !== 'textfix') {\n      const getData = async () => {\n        handleLoad(true)\n        const res = await sectionAPI.getSection(section)\n        handleLoad(false)\n        const bottomIter = res.bottomItems.values()\n        const topIter = res.topItems.values()\n        const bottomValues = []\n        const topValues = []\n        for (let elem of bottomIter) {\n          bottomValues.push(elem)\n        }\n        for (let elem of topIter) {\n          topValues.push(elem)\n        }\n        setItems(bottomValues)\n        setTopItems(topValues)\n        setTemplates(res.templates)\n\n\n      }\n      getData()\n\n    }\n\n  }, [section])\n\n\n\n  if (loading) {\n    return (\n      <div className=\"loading-wrapper\">\n        <img\n          src=\"78.gif\"\n          alt=\"Loading...\"\n        />\n      </div>\n    )\n  }\n\n  else if (section === 'textfix') {\n    return (\n      <div className=\"bootstrap-wrapper\">\n        <Header title={section} handleHeaderClick={handleHeaderClick} handleSection={handleSection} />\n        <TextFix />\n      </div>\n    )\n\n  }\n  else if (section && items.length >= 0 && topItems.length >= 0 && templates.hasOwnProperty('baseHTML')) {\n    return (\n      <div className=\"bootstrap-wrapper\">\n        <Header title={section} handleHeaderClick={handleHeaderClick} handleSection={handleSection} handleCustomAdd={handleCustomAdd}/>\n        <Builder items={items} topItems={topItems} setTopItems={setTopItems} templates={templates} section={section} handleSwitch={handleSwitch} />\n      </div>\n    )\n  }\n\n  else {\n    return (\n      <div className=\"bootstrap-wrapper\">\n        <Header handleHeaderClick={handleHeaderClick} handleSection={handleSection} />\n        <Front handleSection={handleSection} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react'\nimport App from './component/App'\nimport './style.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}